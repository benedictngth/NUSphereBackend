version: "3.8"

services:
  db:
    image: postgres:14-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./host_pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: NUSphereBackend
    restart: unless-stopped
    # env_file:
    #   - .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}
      # Add other environment variables as needed
    volumes:
      - ./internal/db/migrations:/goBackend/internal/db/migrations #mount the migrations folder to the container
      - ./initdb:/initdb/init-user-db.sql # Mount initialization scripts
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
